{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Header.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","getTransactions","useCallback","a","axios","get","res","data","response","deleteTransaction","id","delete","addTransaction","config","headers","post","Provider","value","Header","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","handleChange","prop","e","target","onSubmit","preventDefault","htmlFor","onChange","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5316fcd.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'GET_TRANSACTIONS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload\r\n      };\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n      };\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload]\r\n      };\r\n    case 'TRANSACTION_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer, useCallback } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: [],\r\n  error: null,\r\n  loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nconst GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  const getTransactions = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/transactions');\r\n\r\n      dispatch({\r\n        type: 'GET_TRANSACTIONS',\r\n        payload: res.data.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const deleteTransaction = async id => {\r\n    try {\r\n      await axios.delete(`/api/v1/transactions/${id}`);\r\n\r\n      dispatch({\r\n        type: 'DELETE_TRANSACTION',\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  };\r\n\r\n  const addTransaction = async transaction => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/transactions', transaction, config);\r\n\r\n      dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: res.data.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  };\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    error: state.error,\r\n    loading: state.loading,\r\n    getTransactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}\r\n\r\nexport default GlobalProvider;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <h2>Expense Tracker</h2>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const numberWithCommas = x => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};","import React, { useContext, Fragment } from 'react';\r\n\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount)\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h4>Your Balance</h4>\r\n      <h1>${numberWithCommas(total)}</h1>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (amounts\r\n    .filter(item => item < 0)\r\n    .reduce((acc, item) => (acc += item), 0) * -1)\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">${numberWithCommas(income)}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">${numberWithCommas(expense)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}\r\n      </span><button className=\"delete-btn\" onClick={() => deleteTransaction(transaction._id)}>x</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\n\r\nimport Transaction from './Transaction';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst TransactionList = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    getTransactions();\r\n  }, [getTransactions]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => (\r\n          <Transaction key={transaction._id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext, Fragment } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const handleChange = prop => e => {\r\n    if (prop === 'text') {\r\n      setText(e.target.value);\r\n    }\r\n    else if (prop === 'amount') {\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      text,\r\n      amount: amount * 1\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={handleChange('text')} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n          >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={handleChange('amount')} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from 'react';\r\n\r\nimport GlobalProvider from './context/GlobalState';\r\n\r\nimport Header from './components/Header';\r\nimport Balance from './components/Balance';\r\nimport IncomeExpenses from './components/IncomeExpenses';\r\nimport TransactionList from './components/TransactionList';\r\nimport AddTransaction from './components/AddTransaction';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header />\r\n      <div className='container'>\r\n        <Balance />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}